class CacheHelper{static async loadGoogleCharts(e=["corechart"]){return google.charts.load("current",{packages:e})}static _formatUrl(e,t){return e=String(e),e+=e.includes("?")?"&":"?",e+="cache_timestamp="+Math.floor(Date.now()/t)}static _tableToRecords(e){return e.data.map((t=>e.columns.reduce(((e,a,r)=>Object.assign(e,{[a]:t[r]})),{})))}static _loadInMemoryItem(e){return window._CACHE_IN_MEMORY[e]}static _setInMemoryItem(e,t){return window._CACHE_IN_MEMORY[e]=t,t}static async fetch(e,t=1e4){e=CacheHelper._formatUrl(e,t);const a=await caches.open("CacheHelper");let r=await a.match(e);return r||(r=await window.fetch(e),r?.ok&&a.put(e,r.clone()),r)}static getJSON(e,t=1e4){return CacheHelper.fetch(e,t).then((e=>e.json()))}static async getCSV(e,t=1e4){return CacheHelper.fetch(e,t).then((e=>e.text())).then((e=>new Promise(((t,a)=>Papa.parse(e,{header:!0,delimiter:",",skipEmptyLines:!0,complete:e=>{e.errors.length>0?a(e.errors[0]):t(e.data)}})))))}static async getLocationData(e,t=1e4){const a=CacheHelper._formatUrl(e,t);return CacheHelper._setInMemoryItem(a,CacheHelper._loadInMemoryItem(a)??new Promise((async t=>{"CSV"===_CFG["read-format"]?t(CacheHelper.getCSV(`${_CFG["data-url"]}/v3/location/${e}.csv`)):t(CacheHelper._tableToRecords(await CacheHelper.getJSON(`${_CFG["data-url"]}/v3/location/${e}.json`)))})))}}window._CACHE_IN_MEMORY={};