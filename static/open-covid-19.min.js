function setting(e,t){null===t?sessionStorage.removeItem(e):sessionStorage.setItem(e,t)}function loadData(e,t){(e=e||Object.keys(_CFG.tables)).forEach((e=>async function(e,a){const n=Math.round(Date.now()/1e3/60),r=`${_CFG["data-url"]}/v3/${a}`,c=await loadJSON(`${r}?cache=${n}`);t(e,c)}(e,`${e}.csv`)))}function removeEmptyColumns(e){const t=[];return e.forEach((e=>{Object.keys(e).forEach((a=>{e[a]&&t.push(a)}))})),e.map((e=>t.reduce(((t,a)=>Object.assign(t,{[a]:e[a]})),{})))}function retryCallback(e){let t=0;const a=setInterval((()=>{try{e(),clearInterval(a)}catch(e){console.error("Callback failed: "+ ++t,e),t>=32&&clearInterval(a)}}),250)}function recordsToDataTable(e,t=null){const a=[t=t||Object.keys(e[0])].concat(e.map((e=>t.map((t=>e[t])))));return google.visualization.arrayToDataTable(a)}function filterDataIndices(e,t=0,a=null){let n=e.map(((e,t)=>Object.assign({},e,{idx:t})));if(_CFG["min-date"]){const e=n.map(((e,t)=>e.date>=_CFG["min-date"]?t:null)).filter((e=>e))[0];n=n.slice(Math.max(0,e-t))}if(_CFG["max-date"]){const e=n.map(((e,t)=>e.date<=_CFG["max-date"]?t:null)).filter((e=>e)).slice(-1)[0];n=n.slice(0,Math.min(n.length,e))}const r=a||["new_confirmed","new_deceased"],c=e=>""===e||null===e||Number.isNaN(e);let l=0;for(;r.every((e=>c(n[l][e])));)l++;l>0&&(n=n.slice(Math.max(0,l)));let o=n.length-1;for(;r.every((e=>c(n[o][e])));)o--;return o<n.length-1&&(n=n.slice(0,Math.min(o+1,n.length))),n.map((e=>e.idx))}function mapToNumeric(e,t,a=!0){return e.map((e=>(t.forEach((t=>{null!==e[t]?"number"!=typeof e[t]&&(e[t]=parseInt(e[t]),Number.isNaN(e[t]))||a&&e[t]<0&&(e[t]=Math.max(0,e[t])):e[t]=Number.NaN})),e)))}function chartLabel(e){return e+(_CFG["shareable-charts"]?` in ${window.locationLabel}`:"")}function mergeAgeBins(e){const t=["80-","80-89","80-90","90-99","90-100","90-","100-"];return e.map((e=>{e=Object.assign({},e);const a=Object.keys(e),n=a.filter((e=>e.startsWith("age_bin_"))).reduce(((t,a,n)=>Object.assign(t,{[n]:e[a]})),{});if(0===Object.keys(n).length)return e;const r=[...new Set(a.filter((e=>e.match(/.+_age_\d$/))).map((e=>e.slice(0,-"_age_n".length))))],c=Object.keys(n).filter((e=>t.includes(n[e]))).map((e=>Number(e))),l=r.reduce(((t,a)=>Object.assign(t,{[a]:c.map((t=>e[`${a}_age_${t}`])).sum()})),{});c.forEach((t=>{e[`age_bin_${t}`]=Number.NaN,r.forEach((a=>{e[`${a}_age_${t}`]=Number.NaN}))}));const o=Math.min(...c);return r.forEach((t=>{e[`${t}_age_${o}`]=l[t]})),e[`age_bin_${o}`]=t[0],e}))}function ageBinAdapterBuilder(e,t){const a=[];return Object.keys(t).sort(((e,t)=>e-t)).forEach((e=>{const n=t[e],[r,c]=e.substr("population_age_".length).split("_",2).map((e=>parseInt(e)));if(Number.isNaN(c))a.push(n);else for(let e=r;e<=c;e++)a.push(n/(c-r))})),e.reduce(((e,t)=>{const[n,r]=t.split("-",2).map((e=>parseInt(e)));return Number.isNaN(r)?e[t]=a.slice(n).reduce(((e,t)=>e+t),0):e[t]=a.slice(n,r+1).reduce(((e,t)=>e+t),0),e}),{})}function colorScaleValue(e,t,a){const n=1-a,[r,c,l]=e,[o,s,i]=t,[u,m,f]=[Math.round(r*n+o*a),Math.round(c*n+s*a),Math.round(l*n+i*a)],[h,d,b]=[u,m,f].map((e=>("00"+e.toString(16)).slice(-2)));return"#"+[h,d,b].join("")}function*colorScaleGenerator(e,t,a){for(let n=0;n<a-1;n++)yield colorScaleValue(e,t,n/(a-1));yield colorScaleValue(e,t,1)}